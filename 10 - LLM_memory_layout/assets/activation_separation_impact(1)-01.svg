<svg id="a5430479-7bef-4db9-a0b9-c8773248ba2c" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1400 596.66"><defs><pattern id="b5e40e4b-ccce-4730-b3a6-13421bd6368f" data-name="cacheHitPattern" width="10" height="10" patternTransform="matrix(1, 0, 0, -1, 9, 1089)" patternUnits="userSpaceOnUse" viewBox="0 0 10 10"><rect width="10" height="10" style="fill:none"/><rect width="10" height="10" style="fill:#2ed573"/><rect y="8" width="10" height="2" style="fill:#26de81"/></pattern></defs><text transform="translate(340.31 40)" style="isolation:isolate;font-size:28px;fill:#fff;font-family:Arial-BoldMT, Arial;font-weight:700">The Hidden Performance Killer: Separated<tspan x="561.71" y="0" style="letter-spacing:-0.037109375em"> </tspan><tspan x="568.45" y="0">Activations</tspan></text><text transform="translate(520.03 65)" style="isolation:isolate;font-size:16px;fill:#f39c12;font-family:ArialMT, Arial">Why &quot;Clean Code&quot; Can Destroy HPC Performance</text><text transform="translate(116.56 110)" style="isolation:isolate;font-size:20px;fill:#e74c3c;font-family:Arial-BoldMT, Arial;font-weight:700">&quot;Clean&quot; Separated Structure (Performance Killer)</text><path d="M58,130H642a8.25,8.25,0,0,1,8,8.49V333.87a8.25,8.25,0,0,1-8,8.49H58a8.25,8.25,0,0,1-8-8.49V138.49A8.25,8.25,0,0,1,58,130Z" style="fill:#2c2c54;stroke:#e74c3c;stroke-width:2px"/><text transform="translate(60 155)" style="isolation:isolate;font-size:14px;fill:#f39c12;font-family:Arial-BoldMT, Arial;font-weight:700">typedef struct {</text><text transform="translate(70 175)" style="isolation:isolate;font-size:12px;fill:#3498db;font-family:ArialMT, Arial">float* weights; // Model parameters</text><text transform="translate(70 190)" style="isolation:isolate;font-size:12px;fill:#3498db;font-family:ArialMT, Arial">float* biases;</text><text transform="translate(70 205)" style="isolation:isolate;font-size:12px;fill:#3498db;font-family:ArialMT, Arial">float* layer_norms;</text><text transform="translate(60 225)" style="isolation:isolate;font-size:14px;fill:#f39c12;font-family:Arial-BoldMT, Arial;font-weight:700">} ModelParams;</text><text transform="translate(60 250)" style="isolation:isolate;font-size:14px;fill:#f39c12;font-family:Arial-BoldMT, Arial;font-weight:700">typedef struct {</text><text transform="translate(70 270)" style="isolation:isolate;font-size:12px;fill:#e74c3c;font-family:ArialMT, Arial">float* input_activations; // Separate allocation!</text><text transform="translate(70 285)" style="isolation:isolate;font-size:12px;fill:#e74c3c;font-family:ArialMT, Arial">float* hidden_states;</text><text transform="translate(70 300)" style="isolation:isolate;font-size:12px;fill:#e74c3c;font-family:ArialMT, Arial">float* attention_scores;</text><text transform="translate(70 315)" style="isolation:isolate;font-size:12px;fill:#e74c3c;font-family:ArialMT, Arial">float* output_activations;</text><text transform="translate(60 332)" style="isolation:isolate;font-size:14px;fill:#f39c12;font-family:Arial-BoldMT, Arial;font-weight:700">}<tspan x="5.45" y="0" style="letter-spacing:-0.037109375em"> </tspan><tspan x="8.82" y="0">ActivationBuffers;</tspan></text><text transform="translate(266.88 367)" style="isolation:isolate;font-size:16px;fill:#fff;font-family:Arial-BoldMT, Arial;font-weight:700">Memory Layout</text><rect x="50" y="380" width="200" height="40" rx="4" style="fill:#3498db"/><text transform="translate(107.78 405)" style="isolation:isolate;font-size:12px;fill:#fff;font-family:Arial-BoldMT, Arial;font-weight:700">Model <tspan x="38" y="0" style="letter-spacing:-0.01806640625em">W</tspan><tspan x="49.11" y="0">eights</tspan></text><rect x="270" y="380" width="100" height="40" rx="4" style="fill:#34495e;stroke:#7f8c8d;stroke-width:2px;stroke-dasharray:5,5"/><text transform="translate(291.1 405)" style="isolation:isolate;font-size:10px;fill:#7f8c8d;font-family:ArialMT, Arial">Memory Gap</text><rect x="390" y="380" width="200" height="40" rx="4" style="fill:#e74c3c"/><text transform="translate(457.66 405)" style="isolation:isolate;font-size:12px;fill:#fff;font-family:Arial-BoldMT, Arial;font-weight:700">Activations</text><path d="M250,400q70,50,140,0" style="fill:none;stroke:#ff4757;stroke-width:4px;stroke-dasharray:8,4"/><text transform="translate(273.72 470)" style="isolation:isolate;font-size:14px;fill:#ff4757;font-family:Arial-BoldMT, Arial;font-weight:700">CACHE MISS!</text><path d="M58,490H642c4.42,0,8,3.95,8,8.83v70.62c0,4.87-3.58,8.83-8,8.83H58c-4.42,0-8-4-8-8.83V498.83C50,494,53.58,490,58,490Z" style="fill:#e74c3c;stroke:#c0392b;stroke-width:2px"/><text transform="translate(60 515)" style="isolation:isolate;font-size:16px;fill:#fff;font-family:Arial-BoldMT, Arial;font-weight:700">Performance Impact:</text><text transform="translate(70 535)" style="isolation:isolate;font-size:14px;fill:#fff;font-family:ArialMT, Arial">❌ Cache miss rate: 60-80% (constant memory jumping)</text><text transform="translate(70 550)" style="isolation:isolate;font-size:14px;fill:#fff;font-family:ArialMT, Arial">❌ Memory bandwidth: <tspan x="140.44" y="0" style="letter-spacing:-0.037109375em">W</tspan><tspan x="153.14" y="0">asted on cache line fills</tspan></text><text transform="translate(70 565)" style="isolation:isolate;font-size:14px;fill:#fff;font-family:ArialMT, Arial">❌ Inference time: 5-10x slower than optimal</text><text transform="translate(887.22 110)" style="isolation:isolate;font-size:20px;fill:#2ed573;font-family:Arial-BoldMT, Arial;font-weight:700">Unified Structure (HPC Optimized)</text><rect x="750" y="130" width="600" height="200" rx="8" style="fill:#2c2c54;stroke:#2ed573;stroke-width:2px"/><text transform="translate(760 155)" style="isolation:isolate;font-size:14px;fill:#f39c12;font-family:Arial-BoldMT, Arial;font-weight:700">typedef struct {</text><text transform="translate(770 175)" style="isolation:isolate;font-size:12px;fill:#2ed573;font-family:ArialMT, Arial">float* unified_memory; // ONE allocation for<tspan x="230.1" y="0" style="letter-spacing:-0.05517578125em"> </tspan><tspan x="232.78" y="0">AL</tspan><tspan x="247.45" y="0" style="letter-spacing:-0.037109375em">L</tspan><tspan x="253.68" y="0" xml:space="preserve"> data</tspan></text><text transform="translate(770 190)" style="isolation:isolate;font-size:12px;fill:#26de81;font-family:ArialMT, Arial">size_t weights_o<tspan x="88.72" y="0" style="letter-spacing:-0.01806640625em">f</tspan><tspan x="91.83" y="0">fset; // </tspan><tspan x="127.85" y="0" style="letter-spacing:-0.01806640625em">W</tspan><tspan x="138.96" y="0">eights start here</tspan></text><text transform="translate(770 205)" style="isolation:isolate;font-size:12px;fill:#26de81;font-family:ArialMT, Arial">size_t activations_o<tspan x="104.72" y="0" style="letter-spacing:-0.01806640625em">f</tspan><tspan x="107.84" y="0">fset; //</tspan><tspan x="140.52" y="0" style="letter-spacing:-0.05517578125em"> </tspan><tspan x="143.19" y="0">Activations right after</tspan></text><text transform="translate(770 220)" style="isolation:isolate;font-size:12px;fill:#26de81;font-family:ArialMT, Arial">size_t layer0_o<tspan x="80.71" y="0" style="letter-spacing:-0.01806640625em">f</tspan><tspan x="83.83" y="0">fset; // Layer 0 processing space</tspan></text><text transform="translate(770 235)" style="isolation:isolate;font-size:12px;fill:#26de81;font-family:ArialMT, Arial">size_t layer1_o<tspan x="80.71" y="0" style="letter-spacing:-0.01806640625em">f</tspan><tspan x="83.83" y="0">fset; // Layer 1 processing space</tspan></text><text transform="translate(770 250)" style="isolation:isolate;font-size:12px;fill:#26de81;font-family:ArialMT, Arial">size_t output_o<tspan x="81.39" y="0" style="letter-spacing:-0.01806640625em">f</tspan><tspan x="84.51" y="0">fset; // Final output space</tspan></text><text transform="translate(770 265)" style="isolation:isolate;font-size:12px;fill:#3498db;font-family:ArialMT, Arial">// Everything flows sequentially!</text><text transform="translate(760 280)" style="isolation:isolate;font-size:14px;fill:#f39c12;font-family:Arial-BoldMT, Arial;font-weight:700">} Optimized<tspan x="77.01" y="0" style="letter-spacing:-0.05517578125em">T</tspan><tspan x="84.79" y="0">ransformer;</tspan></text><text transform="translate(760 300)" style="isolation:isolate;font-size:12px;fill:#95a5a6;font-family:ArialMT, Arial">// No separate activation struct needed!</text><text transform="translate(760 315)" style="isolation:isolate;font-size:12px;fill:#95a5a6;font-family:ArialMT, Arial">// Everything accessed by o<tspan x="146.74" y="0" style="letter-spacing:-0.01806640625em">f</tspan><tspan x="149.86" y="0">fset into unified_memory</tspan></text><text transform="translate(990.88 360)" style="isolation:isolate;font-size:16px;fill:#fff;font-family:Arial-BoldMT, Arial;font-weight:700">Memory Layout</text><rect x="750" y="380" width="600" height="40" rx="4" style="stroke:#2ed573;stroke-width:3px;fill:url(#b5e40e4b-ccce-4730-b3a6-13421bd6368f)"/><text transform="translate(846 391)" style="isolation:isolate;font-size:9px;fill:#fff;font-family:ArialMT, Arial"><tspan style="letter-spacing:-0.01806640625em">W</tspan><tspan x="8.33" y="0">eights</tspan></text><text transform="translate(946 391)" style="isolation:isolate;font-size:9px;fill:#fff;font-family:ArialMT, Arial">Act0</text><text transform="translate(996 391)" style="isolation:isolate;font-size:9px;fill:#fff;font-family:ArialMT, Arial">Layer0</text><text transform="translate(1046 391)" style="isolation:isolate;font-size:9px;fill:#fff;font-family:ArialMT, Arial">Layer1</text><text transform="translate(1096 391)" style="isolation:isolate;font-size:9px;fill:#fff;font-family:ArialMT, Arial">LayerN</text><text transform="translate(1146 391)" style="isolation:isolate;font-size:9px;fill:#fff;font-family:ArialMT, Arial">Output</text><text transform="translate(1196 391)" style="isolation:isolate;font-size:9px;fill:#fff;font-family:ArialMT, Arial"><tspan style="letter-spacing:-0.11083984375em">T</tspan><tspan x="4.5" y="0">emp</tspan></text><text transform="translate(1246 391)" style="isolation:isolate;font-size:9px;fill:#fff;font-family:ArialMT, Arial">Results</text><text transform="translate(975.19 410)" style="isolation:isolate;font-size:12px;fill:#fff;font-family:Arial-BoldMT, Arial;font-weight:700">Perfect Sequential<tspan x="104.7" y="0" style="letter-spacing:-0.037109375em"> </tspan><tspan x="107.59" y="0">Access</tspan></text><text transform="translate(965.6 460)" style="isolation:isolate;font-size:14px;fill:#2ed573;font-family:Arial-BoldMT, Arial;font-weight:700">CACHE HIT EVE<tspan x="108.12" y="0" style="letter-spacing:-0.037109375em">R</tspan><tspan x="117.71" y="0" style="letter-spacing:-0.01806640625em">Y</tspan><tspan x="126.8" y="0" xml:space="preserve"> TIME!</tspan></text><path d="M758,490h584c4.42,0,8,3.95,8,8.83v70.62c0,4.87-3.58,8.83-8,8.83H758c-4.42,0-8-4-8-8.83V498.83C750,494,753.58,490,758,490Z" style="fill:#27ae60;stroke:#229954;stroke-width:2px"/><text transform="translate(760 515)" style="isolation:isolate;font-size:16px;fill:#fff;font-family:Arial-BoldMT, Arial;font-weight:700">Performance Benefits:</text><text transform="translate(770 535)" style="isolation:isolate;font-size:14px;fill:#fff;font-family:ArialMT, Arial">✅ Cache hit rate: 95%+ (sequential access pattern)</text><text transform="translate(770 550)" style="isolation:isolate;font-size:14px;fill:#fff;font-family:ArialMT, Arial">✅ Memory bandwidth: Perfectly utilized</text><text transform="translate(770 565)" style="isolation:isolate;font-size:14px;fill:#fff;font-family:ArialMT, Arial">✅ Inference time: 6-10x faster than separated</text><line x1="750" y1="440" x2="1331.89" y2="440" style="fill:none;stroke:#2ed573;stroke-miterlimit:10;stroke-width:3px"/><path d="M1350,440c-8.52,3.16-19.09,8.55-25.64,14.27l5.16-14.27-5.16-14.26C1330.91,431.45,1341.48,436.84,1350,440Z" style="fill:#2ed573"/></svg>