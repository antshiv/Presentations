<svg id="e38877f0-40e0-4c9f-976d-d761c1e89cfa" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1400 467.61"><g id="b0362b94-3b61-40eb-bd47-79babf4a4334" data-name="datta_dependencies"><rect x="50" y="6.45" width="1300" height="180" rx="12" style="fill:#1f2937;stroke:#fbbf24;stroke-width:3px"/><text transform="translate(494.96 31.45)" style="isolation:isolate;font-size:20px;fill:#fff;font-family:Arial-BoldMT, Arial;font-weight:700">Data Dependencies and Design Limitations</text><text transform="translate(210.12 76.45)" style="isolation:isolate;font-size:14px;fill:#e5e7eb;font-family:ArialMT, Arial">Forward Pass Dependencies</text><text transform="translate(120 96.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• Layer N output → Layer N+1 input</text><text transform="translate(120 111.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• Cannot parallelize across layers</text><text transform="translate(120 126.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• Sequential memory access pattern</text><text transform="translate(120 141.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">•<tspan x="4.2" y="0" style="letter-spacing:-0.05517578125em"> </tspan><tspan x="6.87" y="0">Activations must be stored for backward</tspan></text><text transform="translate(120 156.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• Memory allocation during forward</text><text transform="translate(120 171.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• Cache pressure from activation storage</text><text transform="translate(605.06 76.45)" style="isolation:isolate;font-size:14px;fill:#e5e7eb;font-family:ArialMT, Arial">Backward Pass Dependencies</text><text transform="translate(520 96.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• Needs stored forward activations</text><text transform="translate(520 111.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• Gradient flow: Layer N → Layer N-1</text><text transform="translate(520 126.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">•<tspan x="4.2" y="0" style="letter-spacing:-0.05517578125em"> </tspan><tspan x="6.87" y="0">Access pattern opposite to forward</tspan></text><text transform="translate(520 141.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• Requires forward weights for gradients</text><text transform="translate(520 156.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• Memory bandwidth intensive</text><text transform="translate(520 171.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• Gradient accumulation overhead</text><text transform="translate(1016.36 76.45)" style="isolation:isolate;font-size:14px;fill:#e5e7eb;font-family:ArialMT, Arial">Memory Layout Limitations</text><text transform="translate(920 96.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• 2x memory usage (dual layouts)</text><text transform="translate(920 111.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• Copy overhead between layouts</text><text transform="translate(920 126.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• Cache pollution during transitions</text><text transform="translate(920 141.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">•<tspan x="4.2" y="0" style="letter-spacing:-0.05517578125em"> </tspan><tspan x="6.87" y="0">Alignment requirements (64B, 4KB)</tspan></text><text transform="translate(920 156.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• NUM<tspan x="34.86" y="0" style="letter-spacing:-0.05517578125em">A</tspan><tspan x="42.21" y="0" xml:space="preserve"> node locality challenges</tspan></text><text transform="translate(920 171.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">•<tspan x="4.2" y="0" style="letter-spacing:-0.01806640625em"> </tspan><tspan x="7.32" y="0">TLB pressure from large allocations</tspan></text></g><g id="b6d59168-a520-4320-b96e-22700123809e" data-name="optimizing"><path d="M62,216.45H1338c6.63,0,12,6.53,12,14.58V445c0,8.05-5.37,14.58-12,14.58H62c-6.63,0-12-6.53-12-14.58V231C50,223,55.37,216.45,62,216.45Z" style="fill:#0f172a;stroke:#059669;stroke-width:3px"/><text transform="translate(436.65 241.45)" style="font-size:20px;fill:#fff;font-family:Arial-BoldMT, Arial;font-weight:700">Optimization Strategy: Dual Layout with Smart Copying</text><text transform="translate(589.32 286.45)" style="isolation:isolate;font-size:18px;fill:#d1d5db;font-family:Arial-BoldMT, Arial;font-weight:700">Implementation<tspan x="133.01" y="0" style="letter-spacing:-0.037109375em"> </tspan><tspan x="137.35" y="0">Approach</tspan></text><text transform="translate(120 316.45)" style="isolation:isolate;font-size:14px;fill:#e5e7eb;font-family:ArialMT, Arial">1. Memory Organization:</text><text transform="translate(140 336.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• Separate forward and backward memory regions (4KB aligned)</text><text transform="translate(140 351.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• Each region optimized for its access pattern</text><text transform="translate(140 366.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• Shared data accessed by reference (no duplication)</text><text transform="translate(120 396.45)" style="isolation:isolate;font-size:14px;fill:#e5e7eb;font-family:ArialMT, Arial">2. Copy Strategy:</text><text transform="translate(140 416.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• DS<tspan x="24.21" y="0" style="letter-spacing:-0.05517578125em">A</tspan><tspan x="31.55" y="0" xml:space="preserve"> hardware copy: Zero CPU overhead, async operation</tspan></text><text transform="translate(140 431.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• Fallback to SIMD copy: Overlapped with computation</text><text transform="translate(140 446.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">• Copy cost: &lt;1% of total training time</text><text transform="translate(932.69 286.45)" style="isolation:isolate;font-size:14px;fill:#e5e7eb;font-family:ArialMT, Arial">Performance Benefits</text><rect x="770" y="296.45" width="480" height="25" rx="4" style="fill:#059669;stroke:#10b981"/><text transform="translate(864.21 313.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">Forward: 95%+ cache e<tspan x="127.07" y="0" style="letter-spacing:-0.01806640625em">f</tspan><tspan x="130.18" y="0">ficiency (vs 50% mixed layout)</tspan></text><rect x="770" y="326.45" width="480" height="25" rx="4" style="fill:#dc2626;stroke:#f59e0b"/><text transform="translate(859.87 343.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">Backward: 90%+ cache e<tspan x="135.74" y="0" style="letter-spacing:-0.01806640625em">f</tspan><tspan x="138.86" y="0">ficiency (vs 60% mixed layout)</tspan></text><rect x="770" y="356.45" width="480" height="25" rx="4" style="fill:#7c3aed;stroke:#a855f7"/><text transform="translate(870.44 373.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial">SIMD: 16x vectorization + perfect memory alignment</text><rect x="770" y="386.45" width="480" height="25" rx="4" style="fill:#059669;stroke:#34d399"/><text transform="translate(854.9 403.45)" style="isolation:isolate;font-size:12px;fill:#9ca3af;font-family:ArialMT, Arial"><tspan style="letter-spacing:-0.11083984375em">T</tspan><tspan x="6" y="0">otal: 30-50x speedup potential over naive implementation</tspan></text></g></svg>